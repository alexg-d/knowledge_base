как работает утилита. Она читает документ по одной строке за раз, выполняет указанные вами действия и выводит результат на стандартный вывод. Одна из самых частых задач, для которых используется awk - это выборка одной из колонок. Все параметры awk находятся в кавычках, а действие, которое надо выполнить - в фигурных скобках. 

$ awk опции 'условие {действие}'

$ awk опции 'условие {действие} условие {действие}'

-F, --field-separator - разделитель полей, используется для разбиения текста на колонки;
-f, --file - прочитать данные не из стандартного вывода, а из файла;
-v, --assign - присвоить значение переменной, например foo=bar;
-b, --characters-as-bytes - считать все символы однобайтовыми;
-d, --dump-variables - вывести значения всех переменных awk по умолчанию;
-D, --debug - режим отладки, позволяет вводить команды интерактивно с клавиатуры;
-e, --source - выполнить указанный код на языке awk;
-o, --pretty-print - вывести результат работы программы в файл;
-V, --version - вывести версию утилиты.

Функции-действия, которые вы можете использовать:

print(строка) - вывод чего либо в стандартный поток вывода;
printf(строка) - форматированный вывод в стандартный поток вывода;
system(команда) - выполняет команду в системе;
length(строка) - возвращает длину строки;
substr(строка, старт, количество) - обрезает строку и возвращает результат;
tolower(строка) - переводит строку в нижний регистр;
toupper(строка) - переводить строку в верхний регистр.

В функциях-действиях можно использовать различные переменные и операторы, вот несколько из них:

FNR - номер обрабатываемой строки в файле;
FS - разделитель полей;
NF - количество колонок в данной строке;
NR - общее количество строк в обрабатываемом тексте;
RS - разделитель строк, по умолчанию символ новой строки;
$ - ссылка на колонку по номеру.


_____________________________________



$ sed опции -e команды файл

У утилиты есть два буфера, это активный буфер шаблона и дополнительный буфер. Оба изначально пусты. Программа выполняет заданные условия для каждой строки в переданном ей файле.

sed читает одну строку, удаляет из неё все завершающие символы и символы новой строки и помещает её в буфер шаблона. Затем выполняются переданные в параметрах команды, с каждой командой может быть связан адрес, это своего рода условие и команда выполняется только если подходит условие.

Когда всё команды будут выполнены и не указана опция -n, содержимое буфера шаблона выводится в стандартный поток вывода перед этим добавляется обратно символ перевода строки. если он был удален. Затем запускается новая итерация цикла для следующей строки.

Если не используются специальные команды, например, D, то после завершения одной итерации цикла содержимое буфера шаблона удаляется. Однако содержимое предыдущей строки хранится в дополнительном буфере и его можно использовать.


-n, --quiet - не выводить содержимое буфера шаблона в конце каждой итерации;
-e - команды, которые надо выполнить для редактирования;
-f - прочитать команды редактирования из файла;
-i - сделать резервную копию файла перед редактированием;
-l - указать свою длину строки;
-r - включить поддержку расширенного синтаксиса регулярных выражений;
-s - если передано несколько файлов, рассматривать их как отдельные потоки, а не как один длинный.


Каждой команде можно передать адрес, который будет указывать на строки, для которых она будет выполнена:

номер - позволяет указать номер строки, в которой надо выполнять команду;
первая~шаг - команда будет выполняется для указанной в первой части сроки, а затем для всех с указанным шагом;
$ - последняя строка в файле;
/регулярное_выражение/ - любая строка, которая подходит по регулярному выражению. Модификатор l указывает, что регулярное выражение должно быть не чувствительным к регистру;
номер, номер - начиная от строки из первой части и заканчивая строкой из второй части;
номер, /регулярное_выражение/ - начиная от сроки из первой части и до сроки, которая будет соответствовать регулярному выражению;
номер, +количество - начиная от номера строки указанного в первой части и еще плюс количество строк после него;
номер, ~число - начиная от строки номер и до строки номер которой будет кратный числу.

Операторы, которые поддерживают регулярные выражения sed Linux:

* - любой символ, любое количество;
\+ - как звездочка, только один символ или больше;
\? - нет или один символ;
\{i\} - любой символ в количестве i;
\{i,j\} - любой символ в количестве от i до j;
\{i,\} - любой символ в количестве от i и больше.


КОМАНДЫ SED

# - комментарий, не выполняется;
q - завершает работу сценария;
d - удаляет буфер шаблона и запускает следующую итерацию цикла;
p - вывести содержимое буфера шаблона;
n - вывести содержимое буфера шаблона и прочитать в него следующую строку;
s/что_заменять/на_что_заменять/опции - замена символов, поддерживаются регулярные выражения;
y/символы/символы - позволяет заменить символы из первой части на соответствующие символы из второй части;
w - записать содержимое буфера шаблона в файл;
N - добавить перевод строки к буферу шаблона;
D - если буфер шаблона не содержит новую строку, удалить его содержимое и начать новую итерацию цикла, иначе удалить содержимое буфера до символа перевода строки и начать новую итерацию цикла с тем, что останется;
g - заменить содержимое буфера шаблона, содержимым дополнительного буфера;
G - добавить новую строку к содержимому буфера шаблона, затем добавить туда же содержимое дополнительного буфера.


tr [КЛЮЧ]... НАБОР1 [НАБОР2]

-c, -C	--complement	Сначала получить дополнение НАБОРА1
-d	--delete	Удалить знаки из НАБОРА2, не превращать
-s	--squeeze-repeats	Замещать последовательность знаков, которые повторяются, из перечисленных в последнем НАБОРЕ, на один такой знак
-t	--truncate-set1


$ head опции файл

опции:

-c (--bytes) — позволяет задавать количество текста не в строках, а в байтах. При записи в виде --bytes=[-]NUM выводит на экран все содержимое файла, кроме NUM байт, расположенных в конце документа.
-n (--lines) — показывает заданное количество строк вместо 10, которые выводятся по умолчанию. Если записать эту опцию в виде --lines=[-]NUM, будет показан весь текст кроме последних NUM строк.
-q (--quiet, --silent) — выводит только текст, не добавляя к нему название файла.
-v (--verbose) — перед текстом выводит название файла.
-z (--zero-terminated) — символы перехода на новую строку заменяет символами завершения строк.
